%
% luatexja-fontspec.sty
%

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{luatexja-fontspec}[2015/01/15 fontspec support of LuaTeX-ja]
\RequirePackage{l3keys2e,luatexja}
\ExplSyntaxOn

\bool_new:N \ltj_fontspec_match
\cs_set:Nn  \ltj_fontspec_pass_opts: {}
\keys_define:nn { luatexja-fontspec }
  {
    match .bool_set:N = \ltj_fontspec_match_bool,
    match .default:n  = true,
    pass .code:n = \cs_set:Nn \ltj_fontspec_pass_opts: {#1},% 互換性
  }
\ProcessKeysOptions { luatexja-fontspec }
\RequirePackage[\ltj_fontspec_pass_opts:]{fontspec}[2014/06/01]% v2.4
\RequirePackage{luatexja-fontspec-24}

\ExplSyntaxOff
%%%%%%%% Now we completely ignore kanjifont definition file.
\@ltj@use@fdfalse

% We must redefine \try@load@fontshape to ignore kanjifont definitions at all.
\def\try@load@fontshape{%
   \expandafter
   \ifx\csname \f@encoding+\f@family\endcsname\relax
       \directlua{luatexja.jfont.is_kenc('\luatexluaescapestring{\f@encoding}')}%
\ifin@\else % Alphabetic font
    \@font@info{Try loading font information for \f@encoding+\f@family}%
    \global\expandafter\let
       \csname\f@encoding+\f@family\endcsname\@empty
     \nfss@catcodes
     \let\nfss@catcodes\relax
     \edef\reserved@a{%
       \lowercase{%
         \noexpand\InputIfFileExists{\f@encoding\f@family.fd}}}%
     \reserved@a\relax
          {\@input@{\f@encoding\f@family.fd}}%
\fi
   \fi}

\endinput
